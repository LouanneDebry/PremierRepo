#BlueJ class context
comment0.params=
comment0.target=TortueRapide()
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ Tortue\n
comment1.params=
comment1.target=void\ avancer()
comment1.text=\n\ M\u00E9thode\ permettant\ \u00E0\ la\ tortue\ d'avancer\ dans\ la\ direction\ fix\u00E9e\n
comment2.params=
comment2.target=void\ tourner()
comment2.text=\n\ M\u00E9thode\ permettant\ de\ tourner,\ dans\ le\ sens\ des\ aiguilles\ d'une\ montre\n
comment3.params=
comment3.target=void\ afficherEtat()
comment3.text=\n\ Affichage\ de\ l'\u00E9tat\ de\ la\ tortue\n
comment4.params=ox\ oy\ x\ y
comment4.target=void\ afficherSegment(int,\ int,\ int,\ int)
comment4.text=\n\ M\u00E9thode\ utilitaire\ d'affichage\ de\ segment\n\n\ @param\ \ ox\ oy\ \ \ coordonn\u00E9es\ initiales\ du\ segment\n\ @param\ \ x\ y\ \ \ coordonn\u00E9es\ finales\ du\ segment\n
comment5.params=mode
comment5.target=void\ tracer(boolean)
comment5.text=\n\ M\u00E9thode\ permettant\ de\ tracer\ ou\ non\n\ Remarque\ \:\ cette\ impl\u00E9mentation\ n'est\ pas\ correcte\ \:\ elle\ ne\ garantit\ pas\ \n\ un\ appel\ correct\ des\ m\u00E9thodes\ ;\ on\ peut\ appeler\ deux\ fois\ de\ suite\ \n\ tracer(true)\ par\ exemple\n\n\ @param\ \ mode\ \ \ bool\u00E9en\ repr\u00E9sentant\ le\ mode\ de\ trace\ (vrai\ ou\ faux)\n
comment6.params=v
comment6.target=void\ avancer(int)
comment6.text=\n\ Premi\u00E8re\ impl\u00E9mnetation\ \:\ param\u00E9trer\ avancer\n\n\ @param\ \ v\ \ \ vitesse\ de\ la\ tortue\ (par\ d\u00E9faut\ 1)\n
comment7.params=v
comment7.target=void\ setVitesse(int)
comment7.text=\n\ Deuxi\u00E8me\ impl\u00E9mentation\ \:\ changer\ la\ vitesse\n\n\ @param\ \ v\ \ \ nouvelle\ vitesse\n
comment8.params=
comment8.target=void\ accelerer()
comment9.params=
comment9.target=void\ ralentir()
numComments=10
